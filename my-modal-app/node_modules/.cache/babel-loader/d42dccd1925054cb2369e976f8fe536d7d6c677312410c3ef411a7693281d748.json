{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rusla\\\\Desktop\\\\goit-zadralo\\\\dz10\\\\my-modal-app\\\\src\\\\Modal.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\n_c = ModalOverlay;\nconst ModalContent = styled.div`\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  min-width: 300px;\n  position: relative;\n`;\n_c2 = ModalContent;\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background: none;\n  border: none;\n  font-size: 1.5rem;\n  cursor: pointer;\n`;\n_c3 = CloseButton;\nclass Modal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false\n    };\n    this.openModal = () => {\n      this.setState({\n        isOpen: true\n      });\n    };\n    this.closeModal = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n    this.handleKeyDown = e => {\n      if (e.key === 'Escape') {\n        this.closeModal();\n      }\n    };\n  }\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.isOpen !== prevState.isOpen) {\n      if (this.state.isOpen) {\n        document.body.style.overflow = 'hidden'; // Disable scrolling when modal is open\n      } else {\n        document.body.style.overflow = 'unset'; // Enable scrolling when modal is closed\n      }\n    }\n  }\n  render() {\n    if (!this.state.isOpen) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(ModalOverlay, {\n      onClick: this.closeModal,\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n          onClick: this.closeModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), this.props.children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Modal;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ModalOverlay\");\n$RefreshReg$(_c2, \"ModalContent\");\n$RefreshReg$(_c3, \"CloseButton\");","map":{"version":3,"names":["React","Component","styled","jsxDEV","_jsxDEV","ModalOverlay","div","_c","ModalContent","_c2","CloseButton","button","_c3","Modal","constructor","args","state","isOpen","openModal","setState","closeModal","handleKeyDown","e","key","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","prevState","body","style","overflow","render","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","props","$RefreshReg$"],"sources":["C:/Users/rusla/Desktop/goit-zadralo/dz10/my-modal-app/src/Modal.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ModalOverlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  min-width: 300px;\r\n  position: relative;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  background: none;\r\n  border: none;\r\n  font-size: 1.5rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nclass Modal extends Component {\r\n  state = {\r\n    isOpen: false,\r\n  };\r\n\r\n  openModal = () => {\r\n    this.setState({ isOpen: true });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ isOpen: false });\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.key === 'Escape') {\r\n      this.closeModal();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.isOpen !== prevState.isOpen) {\r\n      if (this.state.isOpen) {\r\n        document.body.style.overflow = 'hidden'; // Disable scrolling when modal is open\r\n      } else {\r\n        document.body.style.overflow = 'unset'; // Enable scrolling when modal is closed\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isOpen) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <ModalOverlay onClick={this.closeModal}>\r\n        <ModalContent onClick={(e) => e.stopPropagation()}>\r\n          <CloseButton onClick={this.closeModal}>\r\n            &times;\r\n          </CloseButton>\r\n          {this.props.children}\r\n        </ModalContent>\r\n      </ModalOverlay>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}